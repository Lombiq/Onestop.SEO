using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using Orchard.Mvc.Filters;
using System.Web.Mvc;
using Onestop.Seo.Services;
using Orchard.Environment;
using Orchard.UI.Resources;
using Orchard.ContentManagement;
using Orchard.Core.Common.Models;
using Orchard.Utility.Extensions;

namespace Onestop.Seo.Filters {
    public class DescriptionsFilter : FilterProvider, IResultFilter {
        private readonly Work<ISeoService> _seoServiceWork;
        private readonly Work<ICurrentContentService> _currentContentServiceWork;
        private readonly Work<IResourceManager> _resourceManagerWork;

        public DescriptionsFilter(
            Work<ISeoService> seoServiceWork,
            Work<ICurrentContentService> currentContentServiceWork,
            Work<IResourceManager> resourceManagerWork) {
            _seoServiceWork = seoServiceWork;
            _currentContentServiceWork = currentContentServiceWork;
            _resourceManagerWork = resourceManagerWork;
        }

        public void OnResultExecuted(ResultExecutedContext filterContext) {
        }

        public void OnResultExecuting(ResultExecutingContext filterContext) {
            // Don't run on admin
            if (Orchard.UI.Admin.AdminFilter.IsApplied(filterContext.RequestContext)) return;

            // Don't run on home page
            if (filterContext.HttpContext.Request.Path == "/") return;

            var item = _currentContentServiceWork.Value.GetContentForRequest();
            if (item == null) return;

            // Rewritten descriptions should be handled here

            if (!_seoServiceWork.Value.GetGlobalSettings().AutogenerateDescriptions) return;

            if (!item.Has<BodyPart>()) return;

            var text = item.As<BodyPart>().Text.RemoveTags().Trim();
            if (String.IsNullOrEmpty(text)) return;

            var description = text;

            var maxLength = 150;
            if (text.Length > maxLength) {
                var spacePosition = text.IndexOf(" ", maxLength);
                if (spacePosition > -1) description = text.Substring(0, spacePosition);
            }

            _resourceManagerWork.Value.SetMeta(new MetaEntry {
                Name = "description",
                Content = description
            });
        }
    }
}